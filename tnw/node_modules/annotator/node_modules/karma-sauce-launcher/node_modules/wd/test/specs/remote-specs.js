var url = require('url');
require('../helpers/setup');

describe("wd remote tests", function() {
  describe("default", function() {
    it("browser should be initialized with default parameters", function(done) {
      var browser;
      browser = wd.remote();
      browser.configUrl.hostname.should.equal('127.0.0.1');
      browser.configUrl.port.should.equal('4444');
      browser.configUrl.pathname.should.equal('/wd/hub');
      should.not.exist(browser.configUrl.auth);
      done();
    });
  });
  describe("url string", function() {
    it("browser should be initialized with: http default", function(done) {
      var browser;
      browser = wd.remote('http://localhost');
      browser.configUrl.protocol.should.equal('http:');
      browser.configUrl.hostname.should.equal('localhost');
      should.not.exist(browser.configUrl.port);
      browser.configUrl.pathname.should.equal('/');
      should.not.exist(browser.configUrl.auth);
      done(null);
    });
    it("browser should be initialized with: http url", function(done) {
      var browser;
      browser = wd.remote('http://localhost:8888/wd/hub');
      browser.configUrl.protocol.should.equal('http:');
      browser.configUrl.hostname.should.equal('localhost');
      browser.configUrl.port.should.equal('8888');
      browser.configUrl.pathname.should.equal('/wd/hub');
      should.not.exist(browser.configUrl.auth);
      done(null);
    });
    it("browser should be initialized with: https url", function(done) {
      var browser;
      browser = wd.remote('https://localhost:8888/wd/hub');
      browser.configUrl.protocol.should.equal('https:');
      browser.configUrl.hostname.should.equal('localhost');
      browser.configUrl.port.should.equal('8888');
      browser.configUrl.pathname.should.equal('/wd/hub');
      should.not.exist(browser.configUrl.auth);
      done(null);
    });
    it("browser should be initialized with: http url, auth", function(done) {
      var browser;
      browser = wd.remote('http://mickey:mouse@localhost:8888/wd/hub');
      browser.configUrl.hostname.should.equal('localhost');
      browser.configUrl.port.should.equal('8888');
      browser.configUrl.pathname.should.equal('/wd/hub');
      browser.configUrl.auth.should.equal('mickey:mouse');
      done(null);
    });
  });
  describe("url object", function() {
    it("browser should be initialized with: http default", function(done) {
      var browser;
      browser = wd.remote(url.parse('http://localhost'));
      browser.configUrl.protocol.should.equal('http:');
      browser.configUrl.hostname.should.equal('localhost');
      should.not.exist(browser.configUrl.port);
      browser.configUrl.pathname.should.match(/^\/?$/);
      should.not.exist(browser.configUrl.auth);
      done(null);
    });
    it("browser should be initialized with: http url", function(done) {
      var browser;
      browser = wd.remote(url.parse('http://localhost:8888/wd/hub'));
      browser.configUrl.protocol.should.equal('http:');
      browser.configUrl.hostname.should.equal('localhost');
      browser.configUrl.port.should.equal('8888');
      browser.configUrl.pathname.should.equal('/wd/hub');
      should.not.exist(browser.configUrl.auth);
      done(null);
    });
    it("browser should be initialized with: https url", function(done) {
      var browser;
      browser = wd.remote(url.parse('https://localhost:8888/wd/hub'));
      browser.configUrl.protocol.should.equal('https:');
      browser.configUrl.hostname.should.equal('localhost');
      browser.configUrl.port.should.equal('8888');
      browser.configUrl.pathname.should.equal('/wd/hub');
      should.not.exist(browser.configUrl.auth);
      done(null);
    });
    it("browser should be initialized with: http url, auth", function(done) {
      var browser;
      browser = wd.remote(url.parse('http://mickey:mouse@localhost:8888/wd/hub'));
      browser.configUrl.hostname.should.equal('localhost');
      browser.configUrl.port.should.equal('8888');
      browser.configUrl.pathname.should.equal('/wd/hub');
      browser.configUrl.auth.should.equal('mickey:mouse');
      done(null);
    });
  });
  describe("params", function() {
    it("browser should be initialized with: host, port", function(done) {
      var browser;
      browser = wd.remote('localhost', 8888);
      browser.configUrl.hostname.should.equal('localhost');
      browser.configUrl.port.should.equal('8888');
      browser.configUrl.pathname.should.equal('/wd/hub');
      should.not.exist(browser.configUrl.auth);
      done(null);
    });
    it("browser should be initialized 